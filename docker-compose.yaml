version: '3.11'

services:

  db:
    image: postgres
    container_name: db
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    expose:
      - '5432'
    networks:
      - my_network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5


  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    env_file:
      - .env
    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate && gunicorn project.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    networks:
      - my_network
    depends_on:
      - db
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/" ]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - /root/virteg_amo_integration/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/live/24virteg.ru:/etc/letsencrypt/live/24virteg.ru
    ports:
      - "80:80"
      - "443:443"
    networks:
      - my_network
    depends_on:
      - backend
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://backend:8000/" ]  # Замените URL на подходящий для вашего приложения
      interval: 30s
      timeout: 10s
      retries: 5


  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6380:6379'
    networks:
      - my_network
    volumes:
      - redis_data:/data


  celery_worker:
    build: .
    tty: true
    container_name: celery_worker
    restart: always
    networks:
      - my_network
    command: celery -A project worker -l info
    depends_on:
      - redis
      - backend

  celery_beat:
    build: .
    tty: true
    container_name: celery_beat
    restart: always
    networks:
      - my_network
    command: celery -A project beat -l info
    depends_on:
      - redis
      - backend
volumes:
  pg_data:
  redis_data:

networks:
  my_network:
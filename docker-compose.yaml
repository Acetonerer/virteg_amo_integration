version: '3.11'

services:

  db:
    image: postgres
    container_name: db
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    expose:
      - '5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate && gunicorn project.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - "5000:5000"
    networks:
      - my_network
    depends_on:
      - db
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    ports:
      - "3000:3000"
    networks:
      - my_network
    depends_on:
      - backend
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6380:6379'
    volumes:
      - redis_data:/data


  celery_worker:
    build: .
    tty: true
    container_name: celery_worker
    restart: always
    command: celery -A project worker -l info
    depends_on:
      - redis
      - backend

  celery_beat:
    build: .
    tty: true
    container_name: celery_beat
    restart: always
    command: celery -A project beat -l info
    depends_on:
      - redis
      - backend
volumes:
  pg_data:
  redis_data:

networks:
  my_network: